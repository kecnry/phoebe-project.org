  This is PHOEBE-0.30 ChangeLog. All changes since Sep 1 2003 are logged here.
  For previous ChangeLog entries refer to PHOEBE 0.2x versions or the CVS.
--------------------------------------------------------------------------------

2004-07-26: - Hard dependency of PHOEBE build on GTK+ and gtkdatabox is dropped!
              PHOEBE should now compile and run on *any* ANSI-C platform! All
              changes have been done in configure.ac.
            - All version and name global definitions moved to configure.ac.
              This means that all there is to do when a new release is prepared
              is to change the configure.ac file and that's it! :)
            - An option to manually disable the GUI build by using the switch
              --disable-gui (passed to ./configure) added.
2004-07-25: - Type propagation for double arrays wasn't performed. Fixed.
            - A discussion on dangling-else problem and an example of type pro-
              pagation added to the API documentation.
            - Simplex minimizer returned an exception value -2 if the conver-
              gence wasn't reached in the passed maximum number of iterations,
              which was induced by the gsl minimizer itself. This was conflic-
              ting with PHOEBE's way of enumerating things (+ for non-critical
              and - for fatal exceptions), so it was changed to +3. As a side
              effect, the benign (false) warning about incorrect experimental
	      data readout from before has been eliminated.
2004-07-24: - Recognition pattern for identifiers extended to contain underscore
              delimeter '_'.
            - configure.ac changed to include gtkdatabox library www location if
              the script cannot find it. This simplifies the build for users
              that don't have the time to read the top-level README file.
            - The legacy phoebe_scripting.c and phoebe_scripting.h removed from
              the build process.
            - The default configure.ac header name src/config.h was renamed to
              src/phoebe_build_config.h. It contains all #define statements
              determined at configure time, which govern the way PHOEBE is
              built.
            - Two global definitions added in configure.ac to remove the need
              of editing main.c whenever a new version is released. Those are
              PACKAGE_RELEASE_DATE and PACKAGE_RELEASE_TYPE. The date is clear,
              I guess, the type stands for alpha (in heavy development), beta
              (testing) or stable (debugging).
            - FINALLY: the scripter part is *completely* separated from the
              GUI. All GUI-related parts have been moved from the src/ direc-
              tory to the gui/ directory.
            - All implicit function definitions have been fixed by adding nece-
              ssary #include directives to affected source files.
            - All unused variables have been removed.
2004-07-23: - #ifdef statements in phoebe_spectra.c/.h were missing to check
              for GSL availability. The source should now compile cleanly under
              system without GSL installed. Thanks to Dirk Terrell for pointing
              this out!
2004-07-22: - Types have been consistently introduced to PHOEBE scripter. The
              user now has all four major types at disposal: int, double, bool
              and strings!
            - Everything has been updated to work with multi-type variables.
            - 'get_parameter_value' command implemented. It takes two or three
              arguments, the first being an identifier, the second the qualifier
              and the third optionally the curve index.
            - Error handling has been bullet-proofed. That's pretty much it,
              now I need some feedback! :)
            - API Documentation has been updated.
2004-07-21: - All scripter commands have been moved to the independent source
              file called phoebe_scripter_commands.c. All future command imple-
              mentations should go there.
            - All commands have been fool-proofed with hopefully a minimal bug
              count. ;)
            - Strings introduced into scripter. The concatenation via the 'set'
              directive is possible, identifier substitution and printout as
              well. There is an obvious need for integers, but this has yet to
              come. All commands and directives that take literal arguments now
              take identifiers as well and check whether they are indeed strings
              and if not, an error message is returned.
            - The system call syntax conflicted with the '!=' operator, so the
              system calls are now restricted only to statements having '!' on
              the beginning of the line.
            - Again a huuuuuge improvement: the scripter AST (Abstract Syntax
              Tree) has been practically rewritten to support *any* argument
              type. Currently four basic types are supported: int, double,
              bool and string, which is already much better than just doubles
              and string emulations. But what is even better, it is now really
              easy to expand the type space with arrays, for example. However,
              this is not the priority now.
2004-07-20: - System calls via '!' delimeter have been implemented in scripter.
              Anything may be executed, as long as there is sufficient memory
              to hold the process.
            - Enumeration readouts have been handled for failed recognitions.
              This is important when a user builds his own keyword file and
              mistypes the literal. All functions should check the readout
              values for exceptions.
2004-07-19: - 'print' directive implemented. This directive takes variable num-
              ber of arguments that must be either literals or expressions re-
              turning numerical value. See PHOEBE API for further information.
            - Syntax highlighting for PHOEBE scripter added to NEdit. I will
              put the macro to PHOEBE's web page along with instructions on how
              to add it to your nedit as soon as the scripter becomes beta.
            - Error handling on set_parameter_value () function tightened.
            - After finally finishing the scripter core, my attention turns to
              the plug-in system. I'm learning how to implement that properly,
              in the mean time I am fixing other small issues. The first such
              annoying issue is the GUI Window title - it now changes to the
              modeled star name. The driving function has been rewritten and
              optimized to the fullest extent.
            - PHOEBE keyword file converter written in flex. The converter
              scans through the old keyword file format and outputs the new
              (0.3x) keyword file format.
            - The About window updated to contain both authors and both con-
              tributors.
            - A new frame added around status bar. It just looks a bit nicer,
              that's all! :)
            - A list of all qualifiers, keywords and types added to PHOEBE
              API. If someone tries to make me do this again, I'm not guaran-
              teeing for my behavior! %-) I'll just pass out now, thank you!
2004-07-18: - Scripter commands 'compute_lc ()' and 'compute_rv ()' implemen-
              ted. The API documentation updated. Both commands take five argu-
              ments: the output filename, the target curve, phase start, phase
              end and the number of vertices.
            - A small bug removed from the experimental data readout function
              that introduced a slight overhead in doubled readout.
            - Nelder & Mead's Downhill simplex method extended to include RV
              curves as well.
            - Primitive weighting of different curves with their global stan-
              dard deviations has been implemented. I hope this ancient
              approach will be soon gotten rid of. Any suggestions on how to
              handle this?
2004-07-17: - WD fortran wrapper extended to support RV readout from the same
              calling routine. To this routine two new functions have been
              hooked up, namely call_wd_to_get_rv1 and call_wd_to_get_rv2.
              Direct RV readout from WD is now possible!
2004-07-16: - Loops and conditionals fully implemented in scripter.
            - Identifier operators ++, --, +=, -=, *= and /= implemented in
              scripter.
            - First simplex minimizer heuristics search has been called from
              script - it was the triple-nested for loop and it worked like a
              charm! :)
2004-07-15: - Although I have neglected this ChangeLog a bit, much has been
              done: the scripter core has been rewritten from scratch. It is
              now based on strict LALR(1) grammar and supports everything the
              old scripter supported + full arithmetics + user-defineable
              functions + proper error handling. Two tools have been used for
              this: flex for lexing and bison for parsing. Abstract syntax
              tree (AST) replaces the former functional definition of scripting
              directives and commands. The need for realization delimeter ($)
              and dereferencing delimeter (&) has been removed.
            - Range checking added to bandpass-dependent parameters' readout.
              All readout function return -2 to signal out-of-bounds error.
            - Independent variable box added to the GUI Data tab and connected
              to the core.
            - Range checking added to WD LCI file generator function.
            - 'create_wd_lci_file (filename, mpage, curve)' added to PHOEBE
              scripter. You may use this function to create a raw Wilson-Devin-
              ney input file. This might be interesting for testing different
              WD versions, checking consistency etc.
            - PHOEBE API document updated to contain completely up-to-date
              information.
2004-06-29: - Are you ready for this: simulated annealing has been implemented!
              Although it isn't fast, it does render heuristic searches obso-
              lete. Thus it might be useful to give simulated annealing a chan-
              ce when we reached a given minimum with some fast method, e.g.
              simplex or DC: simulated annealing would then be able to jump
              out of it if it's only a local minimum. The implementation still
              needs to be fool-proofed and the arguments decided on (oversimp-
              lified vs. bloated argument set issue).
2004-06-27: - Scripter command line realization automated. The scripter now
              parses the command line automatically, replacing all variables
              (denoted by the '$' delimeter) with their realized values, which
              are read from the global user parameters lookup table. This sim-
              plified the user parameter table access significantly and allows
              the implementation of operators (+, -, *, / and others). The re-
              alization has also been fool-proofed.
2004-06-26: - Scripter interface has been fool-proofed. The scripter commands
              now check for the number of arguments before they are passed to
              the actual functions, since the variable call va_arg has unpre-
              dictable results if the arguments aren't exactly as expected.
            - The 'list' directive expanded to contain arguments. Currently
              two arguments are supported, 'pars' and 'adjustables'. Fool-
              proofing is also implemented.
            - The 'help' directive expanded to contain arguments, but since
              multi-language support with gettext library is planned, the on-
              line help isn't available. Please refer to PHOEBE API for help
              on PHOEBE scripting (and yes, that document is in fact up-to-
              date! :) ).
2004-06-24: - Implementation of the Kurucz spectra has begun! After this imple-
              mentation is done, 0.30pre2 will be released! :)
            - Two new keywords added to PHOEBE configuration file: PHOEBE_
              KURUCZ_SWITCH and PHOEBE_KURUCZ_DIR. The readout is done as for
              all other keywords, in phoebe_init() function.
            - A scripter function 'query_spectra_repository (dirname)' added
              to the scripter commands. It checks whether the passed directory
              is indeed a spectra repository and it returns the number of
              spectra in it.
2004-06-22: - Nelder & Mead's Downhill simplex algorithm officially supported
              by PHOEBE! The algorithm has been tested on UV Leonis data and
              it showed remarkable convergence that *never* fails! :) Unfortu-
              nately, the CVS server is still down due to the compromise, so
              this support cannot be checked out yet. If you are reading this
              and want to get the testing version, please e-mail me and I'll
              send you the tarball of the local CVS snapshot.
2004-06-21: - Experimental data readout in the downhill simplex routine was
              moved from the chi2 function to the main minimization function.
              This optimizes the chi2 calculation, since the readout is done
              only once.
            - Adjustment readout has been drastically enhanced - the values are
              now written in arrays according to their scope - whether they
              apply to the system level or to the filter-dependent level.
            - Downhill simplex base and the corresponding chi2 cost function
              have been expanded to minimize all light curves at once. There is
              no LC-dependent weighting yet, which will be added immediately
              after initial testing is done.
2004-06-20: - There were a couple of newlines WD still produced and these were
              now commented out.
            - Major optimization in the simplex minimization function has been
              done. There are still some smaller issues to be addressed, but
              the gain is already noticeable. chi2 function now never accesses
              any elements by itself, it only uses the values that have been
              passed by the main minimization function, which saves a lot of
              time.
            - PHOEBE programming API renamed to PHOEBE Scripter API, since the
              top-level SPECS already serves the programming API purpose. The
              scripter has now become the scientific core of PHOEBE and as such
              it needs a fine up-to-date documentation. To all directives and
              commands in the Scripter API, many examples have been added to
              help the user quickly catch on to the Scripter philosophy.
2004-06-19: - WD function cleared of all write statements, so that now the
              stdout isn't trashed with data anymore. This needs a lot of work
              still, though.
            - Downhill simplex algorithm implemented and tested. The premiere
              minimization of the inclination value for UV Leonis was a suc-
              cess! :) The links are still hard-coded, the cost function ut-
              terly unoptimized, but everything seems indeed to be functional,
              so I'll be cleaning and polishing tomorrow. I hope this minimizer
              becomes useful for you guys! :) Oh, one more thing: the minimizer
              can be initiated only from the scripter, I need the volunteer
              (or more likely a bit of spare time) to implement the GUI.
2004-06-18: - A nasty bug that crashed the scripter if only a hash mark was
              used for a comment has been fixed.
            - Global parameter lookup table split in two parts: the core part
              and the GUI part. All lookup functions have been updated to
              handle two distinct tables correctly. The benefit of this is
              to avoid GUI initialization for scripter-only usage. The penalty
              is that now two declaration functions exist and both should be
              updated if a new parameter is introduced.
            - phoebe_init () function split to phoebe_init () and phoebe_gui_
              _init (). The first one initializes only the core and the second
              one initializes both. It is difficult to distinct them completely,
              major rewriting would be necessary, that's why the _gui_ function
              doubles the job of the core function and it is therefore neces-
              sary only to call *one* of the two functions. This has been han-
              dled properly in main.c .
            - An invalid free() call that caused the scripter to crash after
              several consecutive calls to a single scripter function has been
              fixed.
2004-06-17: - Scripter functions used their own readout routines, which have
              now been standardized.
            - Array parameters can now read out user lookup tables and they can
              be assigned the variable value rather than just explicit value.
2004-06-16: - The overall design changed completely in the past month. This
              change definitely deserves a new version branch, but since 0.30
              was never released as stable, the versioning will remain the
              same.
            - Humongous effort has been made to completely split the science
              part from the GUI. All keyword functions now work with global
              parameter lookup table and the GUI is updated with the plug-in
              system. The new functions are still under heavy testing. This all
              means that PHOEBE has left completely the notion of being a
              front-end to WD, for it now offers base scripting language and
              new soon-to-be incorporated numerical algorithms for inverse
              problem solving!
            - Since the CVS has been compromised, all updates will be logged
              in this ChangeLog, but the actual checkout will have been made
              available after the CVS is restored.
            - LDMODEL keyword wasn't initialized and thus created some GTK+
              warnings. This bug was benign, but it's still nicer not to have
              a single warning! :)
2004-05-26: - A new allocation function implemented that scans through a global
              parameter table and returns an array of booleans that show the
              state of the adjustment switches.
2004-05-25: - Two new source files added: phoebe_fitting.c and phoebe_fitting.h.
            - An inconsistency in keywords' table fixed: limb darkening coefici-
              ent adjustment switches had non-standard qualifier naming.
2004-05-12: - After preparing and cleaning up 0.24 version, my attention returns
              to 0.30 version. :) Further work on scripting has been done: the
              set_parameter_value* family of commands can now take user-defined
              variables rather than just numbers, but these have to be realized
              (e.g. $a, not only a).
2004-04-21: - PHOEBE Scripter API documentation updated to contain all currently
              available directives and commands. Developers should use this API
              for reference on scripter programming specifications.
            - Checkup for the realize symbol '$' added for the 'set' directive.
            - 'set' directive changed to conform to the newly written specs:
              the variable-to-variable declaration has to use realized values,
              e.g. set a=$b rather than set a=b.
2004-04-20: - A small typo in scripter's help fixed.
2004-04-16: - The scripter segfaulted if the non-existent variable was set to
              another non-existing variable due to range overflow. Fixed.
            - Scripter command get_parameter_value () re-implemented to work
              with strings from the interactive scripter (thus assigning values
              to user-defined variables).
            - Added scripter commands 'set_parameter_value_in_array' and
              'get_parameter_value_in_array'. These are used to set/get the
              values of array elements.
            - Scripter directives 'qualifiers' and 'keywords' implemented. They
              list all qualifiers and keywords known to PHOEBE.
2004-04-15: - Checking for parameter name validity implemented. The scripter now
              checks whether the first character is in fact a letter.
            - Directive 'show' expanded to take one argument - the name of the
              variable to be queried for value. If the variable doesn't exist,
              an error message is returned. Otherwise, only that variable is
              written. Calling 'show' without arguments prints all defined va-
              riables.
            - PHOEBE was locale-dependent - the decimal point symbol, if dif-
              ferent from '.', messed things up. PHOEBE now reads in the cur-
              rent locate, changes the numbering scheme to "C" locale and
              restores the original locale upon exit. This is only done for
              decimal points, all other locale attributes remain the same.
2004-04-14: - Double readout in scripter variable declaration fool-proofed.
              Integer readout strengthened.
            - PHOEBE 0.22 successfully set up on SUSE 8.2. Many thanks to
              Michael Bauer for reporting this!
2004-04-13: - Current working directory after start-up was set to the temporary
              directory. It has now been changed to the start-up directory.
              This makes much more sense when PHOEBE is started in scripting
              mode.
            - Did I say the interactive scripter is frozen? Hehe, well, it is
              not. All script function executions fully implemented. Try star-
              ting PHOEBE with -s switch and type help. Then try using any of
              the given commands or directives.
            - Resolving relative filenames fully supported and optimized.
            - Scripter directives 'ls' and 'dir' implemented (along with the
              get_directory_contents () function).
            - Scripter's 'set' command implemented. The user may now declare
              new variables. The scripter assigns a type to the declared vari-
              able according to parsing rules: if a value of that variable con-
              tains quotes (""), it is a string. If it is YES/TRUE or NO/FALSE,
              it is boolean, if it has a decimal point, it is a double and in
              all other cases it is an int or the assignment fails. These dec-
              larations aren't yet fool-proofed, so be careful how you use 'em.
              Also, all parameter names must start with non-numerical letter.
            - Overwriting (updating) parameter values now fully functional as
              well. Please don't change parameter types from strings to non-
              strings, it will produce memory leaks. The easiest way to use
              these variables is to stick to the given type once the variable
              is declared. This would be easy to enforce, but it wouldn't be
              the elegant solution.
            - Yet another scripter feature: variable passing definitions fully
              implemented! E.g. set a=10, set b=a works! :) The next step is to
              support algebraic relations, but it's enough for today!
            - One last thing, I promise ;) : I fool-proofed most of the varia-
              ble declarations, it should be pretty safe to use. Please comment!
            - Well, I broke my word, sorry! The above change of the initial di-
              rectory broke the plotting scheme. It is now fixed. Also, warnings
              are issued when atmcof.dat and atmcofplanck.dat aren't found ra-
              ther than crashing PHOEBE.
2004-04-10: - Interactive PHOEBE scripter implemented (its basics, actually).
              To initiate interactive scripter, use -s or --scripter switch
              in the command line. Before, -s executed the script, but now it
              it has been changed to -e (--execute). Help screen has been up-
              dated.
            - First two commands implemented into interactive scripter: help
              and quit. This development will freeze for now, since many other
              things have to be done first. However, it should be written soon,
              because script execution will be much faster after this is done!
            - Scripter GUI window column alignment changed from centered to
              left-aligned.
            - Add action callback implemented in Scripter GUI window.
2004-04-09: - A global parameter table expanded to contain array bonds. This way
              all arrays (the dimensions of which depend on other parameters
              (bonds)) may query the bond parameter to obtain their dimension.
            - Array parameter readout added to get_parameter_value script com-
              mand and to set_parameter_value script command. Fool-proofing is
              not yet complete, please don't pass nonsense to the scripter, it
              will crash.
            - All GUI catch functions written. Whenever a parameter gets chan-
              ged, the GUI will catch it and update the value in the widget.
            - main.c changed temporarily to test scripting functions. This will
              be on the CVS only two days, so if you want to test it, be sure
              to extract today's version.
2004-04-08: - Connectivity functions with the GUI prototyped.
2004-04-07: - The global parameter table was expanded to contain actual values
              of parameters. This is one more step towards complete scripter-
              GUI separation.
            - Parameter table index readout functions added to phoebe_keywords.
              Now the index can be retrieved and used for obtaining parameter
              values.
            - Parameter type readout functions added to phoebe_keywords. These
              functions return the type of parameters in the table.
            - Script command set_parameter_value added to the scripter. It is
              already functional for all non-array parameters, but even array
              parameters should be easy to implement.
            - Two new source files introduced: phoebe_connectivity.c and .h.
              These sources hold the signals emitted by the scripter to which
              PHOEBE plugins should connect to. Right now it is just the GUI,
              but in future all kinds of expansions may be plugged in!
2004-04-06: - Parameter data types changed from double pointers to single poin-
              ters. This resulted in big optimization gain - the start-up is
              is now noticeably faster. All follow-up functions have been
              adopted to the new form (see phoebe_global.h for details).
2004-04-05: - Top-level SPECS file expanded to contain further specification on
              PHOEBE scripting.
            - open_keyword_file script command tested and fool-proofed.
            - Redundant #include statements removed from main.c.
            - Main PHOEBE window is now showed from main.c rather then from
              phoebe_gui_accessories. Without this change scripts still opened
              the main window, even if it wasn't necessary.
            - save_keyword_file script command tested and fool-proofed.
2004-04-02: - First public PHOEBE presentation at Zdenek Kopal's Binary Star
              Legacy and Memorial, Litomysl, Czech Republic.
2004-03-26: - Two mailing lists created: phoebe-announce and phoebe-discuss.
              To subscribe, please visit PHOEBE's homepage and follow the ins-
              tructions.
2004-03-25: - Imposed limits on luminosities for main sequence star calculator
              were too low in the GUI - only to 100. Increased to 100000.
2004-03-11: - There was a tiny bug in configure script output: if GSL wasn't
              installed on the system, PHOEBE still reported support for it,
              although it wasn't really used. Thus it was only a printing
              problem, not usage problem. Fixed.
            - Further work on scripting foundry done: the global record has been
              extended to include argument names as well. These names are then
              copied to the Scripter window and will eventually be used for
              argument queries in interactive mode.
            - Scripter window arguments and their names are now updated auto-
              matically with OptionMenu contents' change. Thus nothing has to
              be defined explicitly, the function takes everything from the
              global structure. Neat, huh? ;)
2004-03-08: - Generate seed button was too small and didn't rescale with the
              window under certain window manager themes. Fixed. Thanks to
              Mike Sallman for bringing this to my attention!
            - Interstellar extinction (reddening) fully implemented. Not only
              does it fix a serious bug from 0.2x versions that caused synthe-
              tic data to be dereddened as well, now synthetic dereddening is
              available via Utilities tab. This is very useful for testing and
              assessing reddening influence on the solution. With proper insight
              from dust catalogs this is a powerful physics add-on. So go ahead
              and experiment!
2004-03-07: - Scripter command names are now added automatically to the GUI part
              (the scripter window) from the global command tables. It thus
              isn't necessary to think of adding the commands individually via
              Glade builder as before.
2004-03-04: - Scripting backbone fully implemented. SPECS file further updated
              to contain exact information on scripting.
            - Scripting GUI window implemented. All signals have been hooked up,
              but no actions are yet performed. Info list is completed and the
              dimensions fixated. Looks nice.
            - PHOEBE entered GTK's Success Stories! :-)
              Check it out at http://www.gtk.org/success/
2004-03-02: - Synthetic scatter seed generator implemented. Until now the button
              was present, but clicking didn't do anything.
            - Scripting facility enhanced and SPECSified. Please read the top-
              level SPECS file for detailed implementation information.
            - Exception handling functions moved to a separate source file.
2004-01-26: - GSL (GNU Scientific Library) support added to autoconf & co. This
              paves the ground for numerical algorithms which could be added
              optionally to PHOEBE. GSL support may be disabled with the
              --disable-gsl switch passed to ./configure, but I don't see any
              reason why would someone want to do that.
            - SPECS and phoebe_calculations.c updated with instructions on GSL
              usage and definition switches.
2004-01-25: - Logging service added to PHOEBE. It is fully functional already
              and it allows the user to log his work and save it to disk. The
              tags are already implemented, but they still have to be connected
              to some toolbar editing buttons. Flushing to disk works, but the
              filename of the log file should be written to the keywords file
              and opened together with all other parameters. Alternatively, the
              user should be able to open his log file from the Logging service
              window. Finally, PHOEBE should be able to add time stamps and
              reduction entries automatically to this service. All this remains
              to be done.
2004-01-18: - Toolbar buttons were way too big for nice overall appearance. They
              have been now reduced to 70% of their original size.
            - Main sequence calculator added to the Utilities tab. When we have
              detached binaries for which no RV data are available, mass ratio
              cannot be evaluated. However, if we presume that both stars are
              close to main sequence, the mass ratio may be estimated from both
              temperatures. So the idea is to calculate the effective tempera-
              ture from the color index, fit relevant parameters, among which
              also T1 and T2, then use these two to get RM, SMA, PHSV and PCSV
              and repeat the whole process to satisfactory convergence.
2004-01-17: - Debugging support added to configuration scripts. If PHOEBE is
              configured with --enable-debug, all phoebe_debug () messages will
              show up on stdout (the terminal). Potential problematic functions
              should now undergo extensive adding of phoebe_debug () statments.
            - Statistics frame added to Plot LC window. Looks quite spiffy!
            - Function calculate_median () was changing the array that was
              passed as the argument, which shouldn't be. Fixed.
2004-01-14: - Debugging showed that gtk_tree_iter_free () function creates
              segfaults under RedHat 9.0. Since this function is used for lan-
              guage bindings and does not imply memory leaks, it has been re-
              moved from the source. One more reason why I stick with Debian. ;)
2004-01-11: - UV Leonis data now installed during installation script. It was
              too confusing for the user to be forced to change the absolute
              pathname in the first run.
            - Default executable filename changed to phoebe2. This releives the
              conflict against the old (0.21) version. PHOEBE should always be
              called phoebe, but due to extensive testing by many people this
              had to be incorporated.
2004-01-08: - Function prototypes for catching clicks in LC plot TreeView have
              been implemented. The idea is to make the single clicks go through
              to the row, since the clicks are now "wasted" for selecting a
              particular row. Also it will finally be possible to choose colors
              for graphs. Signals are connected, the code remains to be written.
            - Checkbox functionality has been implemented. Clicks now go through
              to the checkbox immediately, without row selection.
            - Function gtk_tree_view_column_get_index enhanced, following the
              recommendations of GtkTreeView Tutorial, page 36-37.
            - Hard-coded GdkPixbuf paths used for debugging removed. Phoebe2
              should now be completely path-independent.
2004-01-07: - LD button had a wrong widget name tied to the configuration
              setting. Fixed.
            - Dependency on binary WD code has been finally dropped!
            - Installation scripts in autoutils have been updated.
            - Default Base installation directory changed to phoebe2 instead
              of phoebe so that 0.21 and 0.30 versions may coexist nicely.
              This should be changed to version numbers ASAP!
            - PHOEBE 0.30pre0 purely testing release is out!
2004-01-01: - HAPPY NEW YEAR! A testing release is on its way! :)
2003-12-16: - A tiny bug that incorrectly read in the very last keyword file
              line if it is a toggle button delimeter is fixed.
            - Another not-so-tiny bug that added spurious points when empty
              lines in data files were read is fixed.
2003-12-15: - Synthetic LC plotting fully supported (both fluxes and magnitu-
              des). Readout is done by calling WD fortran subroutine.
2003-12-10: - A bug in WLA readout fixed (double instead of integer readout!).
            - A bug in MREF/NREF readout fixed (interchanged roles).
            - Maximum reflection number changed from 100 to 10. Honestly, who
              would ever need more than 10 reflection taken into account?
            - Preliminary synthetic LC plotting supported.
2003-12-09: - Memory leaks have been fixed for color icons. This was redundant
              in a way, since it will be changed completely shortly.
            - Experimental LC data plotting fully supported. Looks great! :)
              All there is to do still is to incorporate color selection.
2003-12-08: - A bug in synthetic noise option fixed - sigma value should be 0.0
              if no synthetic noise is added.
2003-12-07: - GUI TreeWidget enhancements incorporated to all widgets:
              scrolling/resizing properties changed.
2003-12-04: - A Major break-through in code logic: WD routines are now called
              through a function wrapper and *not* as precompiled binaries!
              The idea is to use WD physics to calculate flux as the function
              of phase and let everything else be done by PHOEBE (calling e.g.
              GSL or NR or Octave functions). The wrapper still has to be
              cleaned of all write & co. statements, but it is already fully
              functional!
2003-11-25: - Toplevel configure.in renamed to configure.ac as recommended in
              the autoconf documentation, section 3.1.
            - Toplevel configure.ac PHOEBE version was updated to 0.30.
            - Toplevel configure.ac heavily enhanced. Checkups for gtkdatabox
              library and C functions implemented.
            - The usage of acconfig.h is deprecated and was thus deleted from
              the CVS.
2003-11-16: - A bug in dependent LC plotting variable readout in allocations.c
              fixed - the readout is now working properly.
            - A heavy rewrite of the top-level SPECS file done to reflect upon
              GTK+2.0 transition changes.
            - Gtkdatabox credits added to PHOEBE's About window.
            - Stable version date 0.30 changed to December 1.
2003-11-15: - First global graphing variables used for plotting. The code isn't
              cleaned or fool-proofed yet, but it was tested successfully and
              seems to be working without any issues.
2003-11-13: - PHOEBE's error handling routine phoebe_realloc was suffering from
              an unnecessary termination when called with size=0. When size 0 is
              passed to realloc, it calls free() on the passed pointer.
            - Global graphing cache typedef created. GtkDatabox requests global
              pointer definition for data validity and thus each plotting type
              now has a corresponding cache memory reserved: PHOEBE_??_graph_
              _cache, where ?? is lc for now and will be expanded to rv, sp, 3d
              etc.
            - Allocation handler that clears and sets the graphing cache has
              been implemented in the callbacks part.
2003-11-12: - PHOEBE 0.30 put under the CVS development as phoebe2.
2003-11-11: - PHOEBE_graph_data typedef introduced; it is exactly the same as
              PHOEBE_data typedeffed struct, only that it uses floats instead
              of doubles. This is required for gtkdatabox complience. All read-
              in and allocation functions implemented as well.
2003-11-06: - read_in_experimental_data () function heavily tested and enhanced.
              No problems were detected. All conversions fully functional.
            - Normalized flux as the LC output option abandoned. It never had
              any physical sense to have it; if the user wants his flux to be
              normalized, he should do it via MNORM value from the Data tab.
            - Binning and aliasing LC plot functionality fully restored.
            - Finally: all SuperMongo dependencies removed! SuperMongo is no
              longer required for PHOEBE's functionality! This means PHOEBE is
              fully in open source, under GPL!
2003-11-05: - After much testing, the library gtkdatabox was chosen to be added
              to PHOEBE's plotting options. It is small, fast and could be dis-
              tributed and build along with PHOEBE.
            - Some data allocation routines enhanced.
            - First graphing routines made with gtkdatabox.
            - N1, N2 keywords had to be renamed to N1F and N2F, since PHOEBE
              might confuse them with wavelength-dependent parameters differing
              from N1C and N2C just by one character.
            - Wavelength-dependent parameters' readout fool-proofed. It should
              never happen that this error handler should be invoked, but if
              it happens anyway, better be prepared.
2003-11-03: - Phase calculation from ephemeris added to phoebe_calculations.c.
            - Phase calculator added to Utilities tab. It should be decided on
              phase shift treatment and adjust this calculation accordingly.
2003-10-09: - GUI support added for internal graphing routines. This way all
              SM library dependencies will be obsolete, but the functionality
              will still be available through autoutils configuration. Internal
              graphing routines will be implemented via GdkDrawable functions.
2003-09-17: - WD_LCI_parameters struct created that made all other parameter
              structs obsolete. This struct contains all parameters needed to
              create an LCI file.
            - GUI parts for N1/2 and N1/2C added to the Surface tab and connec-
              ted by keywords within the program.
            - IPB switch moved to the data tab, since it has more to do with
              model constraints that luminosities. And it looks nicer this way!
            - Few wrongly determined spin-button limits corrected.
2003-09-16: - Data statistics window implementation finished.
            - Default values for input columns changed to "Undefined". This key-
              word is now used to test whether any action should or shouldn't
              be performed. It stops redundant function calls.
2003-09-04: - Opening keyword files from command line restored and fully tested.
            - Error handling functions enhanced: phoebe_notice, phoebe_warning
              and phoebe_fatal now take variable number of arguments, following
              the same format as *printf functions.
            - print_to_status_bar function also enhanced to take variable number
              of arguments. All prior calls to this function updated.
2003-09-01: - Initial migration to GTK2+ finished.
